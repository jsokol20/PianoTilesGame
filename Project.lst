Microsoft (R) Macro Assembler Version 14.00.24210.0	    03/25/19 08:48:53
Tiles.asm						     Page 1 - 1


				; ********************************************************
				; ********************************************************
				; *****				  PIANO TILES       		    *****
				; *****							  	                *****
				; *****            Anujin, Jacob, Utsal              *****
				; *****							  	                *****
				; ********************************************************
				; ********************************************************

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
 00000000 2A 2A 2A 2A 2A	welcomeString	BYTE "************** WELCOME TO PIANO TILES *************", 0; Heading
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 20
	   57 45 4C 43 4F
	   4D 45 20 54 4F
	   20 50 49 41 4E
	   4F 20 54 49 4C
	   45 53 20 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 00
 00000034 53 43 4F 52 45	scoreString		BYTE "SCORE: ", 0; Score text
	   3A 20 00
 0000003C 47 41 4D 45 20	overString		BYTE "GAME OVER!", 0; Game Over text
	   4F 56 45 52 21
	   00
 00000047 53 50 45 45 44	speedString		BYTE "SPEED: ", 0; Game Speed text
	   3A 20 00
 0000004F 4C 49 46 45 3A	lifeString		BYTE "LIFE: ", 0; Game Life text
	   20 00
 00000056 3F 3F 3F 3F 3F	wall1			BYTE "???????????????????????????????????????????????????", 0; Wall characters
	   3F 3F 3F 3F 3F
	   3F 3F 3F 3F 3F
	   3F 3F 3F 3F 3F
	   3F 3F 3F 3F 3F
	   3F 3F 3F 3F 3F
	   3F 3F 3F 3F 3F
	   3F 3F 3F 3F 3F
	   3F 3F 3F 3F 3F
	   3F 3F 3F 3F 3F
	   3F 00
 0000008A 3F 09 09 09 09	wall2			BYTE "?						 	?", 0; Wall characters
	   09 09 20 09 3F
	   00
 00000095 00000000		score			DWORD 0; Stores the score
 00000099 00000032		speed			DWORD 50; Stores the speed of the tiles
 0000009D 00000005		life			DWORD 5; Stores the count of lives left
 000000A1  00000030 [		eraseTile		BYTE 48 DUP(" "), 0
	    20
	   ] 00
 000000D2  0000000C [		tiles1			BYTE 12 DUP(" "), 0
	    20
	   ] 00
 000000DF 20			tiles2			BYTE " ", 10 DUP(219), " ", 0
	   0000000A [
	    DB
	   ] 20 00
 000000EC 00000000		tileStore		DWORD 0
 000000F0 45 52 52 4F 52	errorText		BYTE "ERROR!", 0
	   21 00

 000000F7 43 68 6F 6F 73	prompt byte 'Choose level of difficulty', 0; text for levelScreen
	   65 20 6C 65 76
	   65 6C 20 6F 66
	   20 64 69 66 66
	   69 63 75 6C 74
	   79 00
 00000112 20 20 20 31 2E	op1 byte "   1. Easy", 0
	   20 45 61 73 79
	   00
 0000011D 20 20 20 32 2E	op2 byte "   2. Medium", 0
	   20 4D 65 64 69
	   75 6D 00
 0000012A 20 20 20 33 2E	op3 byte "   3. Hard", 0
	   20 48 61 72 64
	   00
 00000135 00000000		UserInput DWORD ?


 00000139 20 20 20 5F 5F	overPrompt1 BYTE "   _____                         ____                 ", 0Dh, 0Ah
	   5F 5F 5F 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 5F 5F
	   5F 5F 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 0D
	   0A
 00000171 20 20 2F 20 5F	overPrompt2 BYTE "  / ____|                       / __ \                ", 0Dh, 0Ah
	   5F 5F 5F 7C 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 5F
	   5F 20 5C 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 0D
	   0A
 000001A9 20 7C 20 7C 20	overPrompt3 BYTE " | |  __  __ _ _ __ ___   ___  | |  | |_   _____ _ __ ", 0Dh, 0Ah
	   20 5F 5F 20 20
	   5F 5F 20 5F 20
	   5F 20 5F 5F 20
	   5F 5F 5F 20 20
	   20 5F 5F 5F 20
	   20 7C 20 7C 20
	   20 7C 20 7C 5F
	   20 20 20 5F 5F
	   5F 5F 5F 20 5F
	   20 5F 5F 20 0D
	   0A
 000001E1 20 7C 20 7C 20	overPrompt4 BYTE " | | |_ |/ _` | '_ ` _ \ / _ \ | |  | \ \ / / _ \ '__|", 0Dh, 0Ah
	   7C 5F 20 7C 2F
	   20 5F 60 20 7C
	   20 27 5F 20 60
	   20 5F 20 5C 20
	   2F 20 5F 20 5C
	   20 7C 20 7C 20
	   20 7C 20 5C 20
	   5C 20 2F 20 2F
	   20 5F 20 5C 20
	   27 5F 5F 7C 0D
	   0A
 00000219 20 7C 20 7C 5F	overPrompt5 BYTE " | |__| | (_| | | | | | |  __/ | |__| |\ V /  __/ |   ", 0Dh, 0Ah
	   5F 7C 20 7C 20
	   28 5F 7C 20 7C
	   20 7C 20 7C 20
	   7C 20 7C 20 7C
	   20 20 5F 5F 2F
	   20 7C 20 7C 5F
	   5F 7C 20 7C 5C
	   20 56 20 2F 20
	   20 5F 5F 2F 20
	   7C 20 20 20 0D
	   0A
 00000251 20 20 5C 5F 5F	overPrompt6 BYTE "  \_____|\__,_|_| |_| |_|\___|  \____/  \_/ \___|_|   ", 0
	   5F 5F 5F 7C 5C
	   5F 5F 2C 5F 7C
	   5F 7C 20 7C 5F
	   7C 20 7C 5F 7C
	   5C 5F 5F 5F 7C
	   20 20 5C 5F 5F
	   5F 5F 2F 20 20
	   5C 5F 2F 20 5C
	   5F 5F 5F 7C 5F
	   7C 20 20 20 00
 00000288 31 2E 20 50 6C	overOp1 BYTE "1. Play again", 0
	   61 79 20 61 67
	   61 69 6E 00
 00000296 32 2E 20 45 78	overOp2 BYTE "2. Exit", 0
	   69 74 00
 0000029E 00000000		overInput DWORD ?

 000002A2 59 6F 75 72 20	showScore BYTE "Your score: "
	   73 63 6F 72 65
	   3A 20

 00000000			.code
 00000000			main PROC

 00000000  E8 0000001B		call levelScreen
 00000005			main ENDP
 00000005			gameEnd::; label to go to the game over screen
 00000005  E8 000000CF		call overScreen
 0000000A			byebye::

 0000000A  E8 00000000 E	call Crlf
 0000000F  E8 00000000 E	call Crlf
 00000014  E8 00000000 E	call Crlf
				exit
 00000019  6A 00	   *	    push   +000000000h
 0000001B  E8 00000000 E   *	    call   ExitProcess

 00000020			levelScreen PROC
 00000020  B8 00000000		mov eax, (black * 16); color settings for the welcome text
 00000025  E8 00000000 E	call SetTextColor
 0000002A  E8 00000000 E	call Clrscr

 0000002F  B8 000000F2		mov eax, green + (white * 16); output the prompt
 00000034  E8 00000000 E	call SetTextColor
 00000039  BA 000000F7 R	mov edx, offset prompt
 0000003E  E8 00000000 E	call WriteString
 00000043  E8 00000000 E	call crlf

 00000048  B8 0000002F		mov eax, white + (green * 16); output the option Easy
 0000004D  E8 00000000 E	call SetTextColor
 00000052  BA 00000112 R	mov edx, offset op1
 00000057  E8 00000000 E	call WriteString
 0000005C  E8 00000000 E	call crlf

 00000061  B8 000000E0		mov eax, black + (yellow * 16); output the option Medium
 00000066  E8 00000000 E	call SetTextColor
 0000006B  BA 0000011D R	mov edx, offset op2
 00000070  E8 00000000 E	call WriteString
 00000075  E8 00000000 E	call crlf

 0000007A  B8 0000004F		mov eax, white + (red * 16); output the option Hard
 0000007F  E8 00000000 E	call SetTextColor
 00000084  BA 0000012A R	mov edx, offset op3
 00000089  E8 00000000 E	call WriteString

 0000008E  E8 00000000 E	call Crlf

 00000093  B8 0000000F		mov eax, white + (black * 16); take the input
 00000098  E8 00000000 E	call SetTextColor
 0000009D  E8 00000000 E	call ReadInt
 000000A2  A3 00000135 R	mov[UserInput], eax; UserInput = eax

 000000A7  BB 00000096		mov ebx, 150
 000000AC  BA 00000096		mov edx, 150
 000000B1  83 F8 01		cmp eax, 1
 000000B4  0F 44 DA		cmove ebx, edx
 000000B7  BA 0000006E		mov edx, 110
 000000BC  83 F8 02		cmp eax, 2
 000000BF  0F 44 DA		cmove ebx, edx
 000000C2  BA 00000050		mov edx, 80
 000000C7  83 F8 03		cmp eax, 3
 000000CA  0F 44 DA		cmove ebx, edx

 000000CD  89 1D 00000099 R	mov speed, ebx

 000000D3  E8 0000007A		call gameScreen
 000000D8  C3			ret
 000000D9			levelScreen ENDP

 000000D9			overScreen PROC
 000000D9  B8 000000F0		mov eax, (white * 16); color settings for the screen
 000000DE  E8 00000000 E	call SetTextColor
 000000E3  E8 00000000 E	call Clrscr
 000000E8  BA 00000139 R	mov edx, OFFSET overPrompt1
 000000ED  B8 000000F4		mov eax, red + (white * 16); color settings for the welcome text
 000000F2  E8 00000000 E	call SetTextColor
 000000F7  E8 00000000 E	call WriteString
 000000FC  E8 00000000 E	call Crlf

 00000101  BA 000002A2 R	mov edx, OFFSET showScore; Show the score
 00000106  E8 00000000 E	call WriteString
 0000010B  A1 00000095 R	mov eax, score
 00000110  E8 00000000 E	call WriteInt


 00000115  E8 00000000 E	call Crlf
 0000011A  BA 00000288 R	mov edx, offset overOp1; output the option : Play again
 0000011F  E8 00000000 E	call WriteString
 00000124  E8 00000000 E	call Crlf
 00000129  BA 00000296 R	mov edx, offset overOp2; output the option : Exit
 0000012E  E8 00000000 E	call WriteString
 00000133  E8 00000000 E	call Crlf
 00000138  E8 00000000 E	call ReadInt; take the input
 0000013D  A3 0000029E R	mov[overInput], eax; overInput = eax

 00000142  83 F8 01		cmp eax, 1
 00000145  74 05		je menuCaller
 00000147  E9 FFFFFEBE		jmp byebye
 0000014C			menuCaller :
 0000014C  E8 FFFFFECF		call levelScreen
 00000151  C3			ret
 00000152			overScreen ENDP


 00000152			gameScreen PROC USES eax ebx ecx edx
 00000152  50		   *	    push   eax
 00000153  53		   *	    push   ebx
 00000154  51		   *	    push   ecx
 00000155  52		   *	    push   edx
 00000156  E8 00000000 E	call Clrscr
 0000015B  C7 05 0000009D R	mov life, 5
	   00000005
 00000165  C7 05 00000095 R	mov score, 0
	   00000000
 0000016F  B2 0E		mov dl, 14; set x for left bound of the area
 00000171  B6 02		mov dh, 2; set y for right bound of the zone
 00000173  E8 00000000 E	call Gotoxy
 00000178  B8 000000F2		mov eax, green + (white * 16); color settings for the welcome text
 0000017D  E8 00000000 E	call SetTextColor
 00000182  BA 00000000 R	mov edx, OFFSET welcomeString
 00000187  E8 00000000 E	call WriteString; display welcome text on the screen
 0000018C  B2 01		mov dl, 1; location for Speed text
 0000018E  B6 08		mov dh, 8
 00000190  E8 00000000 E	call Gotoxy

 00000195  B2 0E		mov dl, 14; location of the area wall
 00000197  B6 04		mov dh, 4
 00000199  E8 00000000 E	call Gotoxy
 0000019E  B8 0000002E		mov eax, yellow + (green * 16); color settings for the wall
 000001A3  E8 00000000 E	call SetTextColor
 000001A8  BA 00000056 R	mov edx, OFFSET wall1
 000001AD  E8 00000000 E	call WriteString
 000001B2  B4 14		mov ah, 20
 000001B4			Wall:; display the wall
 000001B4  B2 0E			mov dl, 14
 000001B6  8A F4			mov dh, ah
 000001B8  E8 00000000 E		call Gotoxy
 000001BD  FE CC			dec ah
 000001BF  BA 0000008A R		mov edx, OFFSET wall2
 000001C4  E8 00000000 E		call WriteString
 000001C9  80 FC 04			cmp ah, 4
 000001CC  7F E6			jg Wall
 000001CE  B2 0E			mov dl, 14
 000001D0  B6 15			mov dh, 21
 000001D2  E8 00000000 E		call Gotoxy
 000001D7  BA 00000056 R		mov edx, OFFSET wall1
 000001DC  E8 00000000 E		call WriteString

 000001E1  E8 00000005			call fallTiles
					ret
 000001E6  5A		   *	    pop    edx
 000001E7  59		   *	    pop    ecx
 000001E8  5B		   *	    pop    ebx
 000001E9  58		   *	    pop    eax
 000001EA  C3		   *	    ret    00000h
 000001EB				gameScreen ENDP

 000001EB				fallTiles PROC USES eax ebx ecx edx
 000001EB  50		   *	    push   eax
 000001EC  53		   *	    push   ebx
 000001ED  51		   *	    push   ecx
 000001EE  52		   *	    push   edx
 000001EF  E8 00000000 E		call Randomize
 000001F4				Start :
 000001F4  B9 00000004		mov ecx, 4; Randomly generate tiles
 000001F9  BB 00000000		mov ebx, 0
 000001FE			genTile:
 000001FE  B8 00000002		mov eax, 2
 00000203  E8 00000000 E	call RandomRange
 00000208  D1 E3		shl ebx, 1
 0000020A  03 D8		add ebx, eax
 0000020C  E2 F0		loop genTile
 0000020E  89 1D 000000EC R	mov tileStore, ebx

 00000214  B9 0000000F		mov ecx, 15; loop counters
 00000219  BB 00000005		mov ebx, 5
 0000021E  B8 0000002F		mov eax, white + (green * 16); color settings for the tiles
 00000223  E8 00000000 E	call SetTextColor

 00000228			downTile :
 00000228  B2 0F		mov dl, 15
 0000022A  8A F3		mov dh, bl
 0000022C  E8 00000000 E	call Gotoxy
 00000231  A1 00000099 R	mov eax, speed; set delay settings
 00000236  E8 00000000 E	call Delay
 0000023B  BA 000000A1 R	mov edx, OFFSET eraseTile
 00000240  E8 00000000 E	call WriteString

 00000245  FE C3		inc bl
 00000247  B2 0F		mov dl, 15
 00000249  8A F3		mov dh, bl
 0000024B  FE CB		dec bl
 0000024D  E8 00000000 E	call Gotoxy

 00000252  60			pushad
 00000253  8B 1D 000000EC R	mov ebx, tileStore
 00000259  B9 00000004		mov ecx, 4
 0000025E			printTile:; print out the tiles
 0000025E  D1 EB			shr ebx, 1
 00000260  72 0C			jc filledOne
 00000262  BA 000000D2 R		mov edx, OFFSET tiles1
 00000267  E8 00000000 E		call WriteString
 0000026C  EB 0A			jmp doneFill
 0000026E				filledOne :
 0000026E  BA 000000DF R	mov edx, OFFSET tiles2
 00000273  E8 00000000 E	call WriteString
 00000278			doneFill :
 00000278  E2 E4		loop printTile
 0000027A  61			popad

 0000027B  43			inc ebx
 0000027C  E2 AA		loop downTile

				; KEYBOARD CODE START
 0000027E  60			pushad
 0000027F  B9 00000001		mov ecx, 1
 00000284  33 C0		xor eax, eax
 00000286  E8 00000000 E	call ReadKey
 0000028B  BB 00000000		mov ebx, 0
 00000290  3D 00001E61		cmp eax, 1E61h
 00000295  0F 44 D9		cmove ebx, ecx
 00000298  BA 00000002		mov edx, 2
 0000029D  3D 00001F73		cmp eax, 1F73h
 000002A2  0F 44 DA		cmove ebx, edx
 000002A5  B9 00000004		mov ecx, 4
 000002AA  BA 00000008		mov edx, 8
 000002AF  3D 00002064		cmp eax, 2064h
 000002B4  0F 44 D9		cmove ebx, ecx
 000002B7  3D 00002166		cmp eax, 2166h
 000002BC  0F 44 DA		cmove ebx, edx

				; CODE TO INCREMENT / DECREMENT SCORE
 000002BF  A1 000000EC R	mov eax, tileStore
 000002C4  23 C3		and eax, ebx
 000002C6  8B C8		mov ecx, eax
 000002C8  23 D8		and ebx, eax
 000002CA  83 FB 00		cmp ebx, 0
 000002CD  7E 1E		jle scoreNotAdd
 000002CF  83 05 00000095 R	add score, 10
	   0A
 000002D6  83 05 0000009D R	add life, 1
	   01
 000002DD  83 3D 00000099 R	cmp speed, 30
	   1E
 000002E4  7E 07		jle speedNotReduce
 000002E6  83 2D 00000099 R	sub speed, 2
	   02
 000002ED			speedNotReduce:
 000002ED			scoreNotAdd:
 000002ED  83 2D 0000009D R	sub life, 1
	   01

 000002F4  61			popad
				; KEYBOARD CODE END

 000002F5  B2 01		mov dl, 1
 000002F7  B6 08		mov dh, 8
 000002F9  E8 00000000 E	call Gotoxy
 000002FE  BA 00000047 R	mov edx, OFFSET speedString
 00000303  E8 00000000 E	call WriteString; display speed text on the screen
 00000308  B8 00000064		mov eax, 100
 0000030D  2B 05 00000099 R	sub eax, speed
 00000313  E8 00000000 E	call WriteInt

 00000318  B2 01		mov dl, 1
 0000031A  B6 0A		mov dh, 10
 0000031C  E8 00000000 E	call Gotoxy
 00000321  BA 00000034 R	mov edx, OFFSET scoreString; display Score
 00000326  E8 00000000 E	call WriteString
 0000032B  A1 00000095 R	mov eax, score
 00000330  E8 00000000 E	call WriteInt

 00000335  B2 01		mov dl, 1
 00000337  B6 0C		mov dh, 12
 00000339  E8 00000000 E	call Gotoxy
 0000033E  BA 0000004F R	mov edx, OFFSET lifeString; display Life
 00000343  E8 00000000 E	call WriteString
 00000348  A1 0000009D R	mov eax, life
 0000034D  E8 00000000 E	call WriteInt

 00000352  B2 0F		mov dl, 15
 00000354  B6 14		mov dh, 20
 00000356  E8 00000000 E	call Gotoxy
 0000035B  A1 00000099 R	mov eax, speed; set delay settings
 00000360  E8 00000000 E	call Delay
 00000365  BA 000000A1 R	mov edx, OFFSET eraseTile
 0000036A  E8 00000000 E	call WriteString

 0000036F  A1 0000009D R	mov eax, life
 00000374  83 3D 0000009D R	cmp life, 0
	   00
 0000037B  0F 84 FFFFFC84	je gameEnd

 00000381  E9 FFFFFE6E		jmp Start
				ret
 00000386  5A		   *	    pop    edx
 00000387  59		   *	    pop    ecx
 00000388  5B		   *	    pop    ebx
 00000389  58		   *	    pop    eax
 0000038A  C3		   *	    ret    00000h
 0000038B			fallTiles ENDP

				END main
Microsoft (R) Macro Assembler Version 14.00.24210.0	    03/25/19 08:48:53
Tiles.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000002AE Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000038B Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
fallTiles  . . . . . . . . . . .	P Near	 000001EB _TEXT	Length= 000001A0 Public STDCALL
  Start  . . . . . . . . . . . .	L Near	 000001F4 _TEXT	
  genTile  . . . . . . . . . . .	L Near	 000001FE _TEXT	
  downTile . . . . . . . . . . .	L Near	 00000228 _TEXT	
  printTile  . . . . . . . . . .	L Near	 0000025E _TEXT	
  filledOne  . . . . . . . . . .	L Near	 0000026E _TEXT	
  doneFill . . . . . . . . . . .	L Near	 00000278 _TEXT	
  speedNotReduce . . . . . . . .	L Near	 000002ED _TEXT	
  scoreNotAdd  . . . . . . . . .	L Near	 000002ED _TEXT	
gameScreen . . . . . . . . . . .	P Near	 00000152 _TEXT	Length= 00000099 Public STDCALL
  Wall . . . . . . . . . . . . .	L Near	 000001B4 _TEXT	
levelScreen  . . . . . . . . . .	P Near	 00000020 _TEXT	Length= 000000B9 Public STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000005 Public STDCALL
overScreen . . . . . . . . . . .	P Near	 000000D9 _TEXT	Length= 00000079 Public STDCALL
  menuCaller . . . . . . . . . .	L Near	 0000014C _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
UserInput  . . . . . . . . . . .	DWord	 00000135 _DATA	
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
byebye . . . . . . . . . . . . .	L Near	 0000000A _TEXT	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
eraseTile  . . . . . . . . . . .	Byte	 000000A1 _DATA	
errorText  . . . . . . . . . . .	Byte	 000000F0 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gameEnd  . . . . . . . . . . . .	L Near	 00000005 _TEXT	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lifeString . . . . . . . . . . .	Byte	 0000004F _DATA	
life . . . . . . . . . . . . . .	DWord	 0000009D _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
op1  . . . . . . . . . . . . . .	Byte	 00000112 _DATA	
op2  . . . . . . . . . . . . . .	Byte	 0000011D _DATA	
op3  . . . . . . . . . . . . . .	Byte	 0000012A _DATA	
overInput  . . . . . . . . . . .	DWord	 0000029E _DATA	
overOp1  . . . . . . . . . . . .	Byte	 00000288 _DATA	
overOp2  . . . . . . . . . . . .	Byte	 00000296 _DATA	
overPrompt1  . . . . . . . . . .	Byte	 00000139 _DATA	
overPrompt2  . . . . . . . . . .	Byte	 00000171 _DATA	
overPrompt3  . . . . . . . . . .	Byte	 000001A9 _DATA	
overPrompt4  . . . . . . . . . .	Byte	 000001E1 _DATA	
overPrompt5  . . . . . . . . . .	Byte	 00000219 _DATA	
overPrompt6  . . . . . . . . . .	Byte	 00000251 _DATA	
overString . . . . . . . . . . .	Byte	 0000003C _DATA	
prompt . . . . . . . . . . . . .	Byte	 000000F7 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
scoreString  . . . . . . . . . .	Byte	 00000034 _DATA	
score  . . . . . . . . . . . . .	DWord	 00000095 _DATA	
showScore  . . . . . . . . . . .	Byte	 000002A2 _DATA	
speedString  . . . . . . . . . .	Byte	 00000047 _DATA	
speed  . . . . . . . . . . . . .	DWord	 00000099 _DATA	
tileStore  . . . . . . . . . . .	DWord	 000000EC _DATA	
tiles1 . . . . . . . . . . . . .	Byte	 000000D2 _DATA	
tiles2 . . . . . . . . . . . . .	Byte	 000000DF _DATA	
wall1  . . . . . . . . . . . . .	Byte	 00000056 _DATA	
wall2  . . . . . . . . . . . . .	Byte	 0000008A _DATA	
welcomeString  . . . . . . . . .	Byte	 00000000 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
